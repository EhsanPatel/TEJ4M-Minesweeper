/*
 * Lukas Krampitz
 * Jun 15, 2021
 * 
 */
package minesweepertej4m;

/**
 *
 * @author Tacitor
 */
public class SweeperCreate extends javax.swing.JFrame {

    MainMenuFrame menuRef;
    Server sweeperServer;
    Client sweeperClient;
    
    GameScreenFrame theGame;

    /**
     * Creates new form SweeperCreate
     *
     * @param m
     */
    public SweeperCreate(MainMenuFrame m) {
        menuRef = m;
        MainMenuFrame.setIcon(this);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLbl = new javax.swing.JLabel();
        portLbl = new javax.swing.JLabel();
        portInfoLbl = new javax.swing.JLabel();
        portTxtFld = new javax.swing.JTextField();
        createBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Multiplayer MineSweeper");

        titleLbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        titleLbl.setText("Create a Minesweeper Game Server");

        portLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        portLbl.setText("Listening port:");

        portInfoLbl.setText("What port should the server be listening for connections on? (25570 recomended)");

        portTxtFld.setText("25570");
        portTxtFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portTxtFldActionPerformed(evt);
            }
        });

        createBtn.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        createBtn.setText("Create Game");
        createBtn.setName("Multiplayer Minesweeper"); // NOI18N
        createBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(titleLbl)
                            .addComponent(portLbl)
                            .addComponent(portInfoLbl)
                            .addComponent(portTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(createBtn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(portLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(portInfoLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(portTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(createBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void portTxtFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_portTxtFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_portTxtFldActionPerformed

    private void createBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBtnActionPerformed
        // hide this window
        this.setVisible(false);

        //create the Sweeper Server for two players
        sweeperServer = new Server(Integer.parseInt(portTxtFld.getText()), menuRef);

        SweeperServerRunnable sweeperServerRunnable = new SweeperServerRunnable(sweeperServer, menuRef);
        sweeperServerRunnable.setDaemon(true); //allow the JVM to close this thread
        sweeperServerRunnable.start();

        //create a first client to auto join 
        sweeperClient = new Client(700, 300, "localhost", Integer.parseInt(portTxtFld.getText()));
        sweeperClient.connectToServer();
        sweeperClient.setUpGUI();
        
        //create a GameScreenFrame and Panel to show the client side game
        theGame = new GameScreenFrame(sweeperClient);
        
        //set the GameScreenFrame attribute in the Client
        sweeperClient.setGameScreenFrame(theGame);
        
        sweeperClient.setUpButton();

    }//GEN-LAST:event_createBtnActionPerformed

    private class SweeperServerRunnable extends Thread implements Runnable {

        private boolean stopRequested = false;
        Server server;
        MainMenuFrame mainMenu;

        public SweeperServerRunnable(Server server, MainMenuFrame mainMenu) {
            this.server = server;
            this.mainMenu = mainMenu;
        }

        public synchronized void requestStop() {
            stopRequested = true;
        }

        @Override
        public void run() {

            //check if this thread should stop
            while (!stopRequested) {
                server.acceptConnections();

                //only run once 
                stopRequested = true;
            }
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createBtn;
    private javax.swing.JLabel portInfoLbl;
    private javax.swing.JLabel portLbl;
    private javax.swing.JTextField portTxtFld;
    private javax.swing.JLabel titleLbl;
    // End of variables declaration//GEN-END:variables
}
